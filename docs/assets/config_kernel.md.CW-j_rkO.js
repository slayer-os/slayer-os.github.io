import{_ as s,c as a,o as e,ag as n}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"Kernel Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"config/kernel.md","filePath":"config/kernel.md"}'),t={name:"config/kernel.md"};function l(h,i,p,r,d,k){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="kernel-configuration" tabindex="-1">Kernel Configuration <a class="header-anchor" href="#kernel-configuration" aria-label="Permalink to &quot;Kernel Configuration&quot;">​</a></h1><p>This document explains the kernel configuration options available in SlayerOS. These settings control the core behavior and features of the operating system.</p><h2 id="feature-flags" tabindex="-1">Feature Flags <a class="header-anchor" href="#feature-flags" aria-label="Permalink to &quot;Feature Flags&quot;">​</a></h2><p>SlayerOS uses compile-time feature flags to enable or disable specific kernel features. These flags are defined in <code>src/include/host/flags.h</code>.</p><h3 id="core-features" tabindex="-1">Core Features <a class="header-anchor" href="#core-features" aria-label="Permalink to &quot;Core Features&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Enable/disable kernel features</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_SMP</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // Symmetric Multiprocessing support</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_ACPI</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // Advanced Configuration and Power Interface</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_APIC</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // Advanced Programmable Interrupt Controller</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_SERIAL_LOGGING</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Serial port logging</span></span></code></pre></div><h3 id="memory-management" tabindex="-1">Memory Management <a class="header-anchor" href="#memory-management" aria-label="Permalink to &quot;Memory Management&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Memory management configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PAGE_SIZE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Size of memory pages in bytes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> KERNEL_HEAP_INITIAL_SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (4 * 1024 * 1024)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4MB initial heap</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MAX_PHYSICAL_MEMORY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (4ULL * 1024 * 1024 * 1024)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4GB max physical memory</span></span></code></pre></div><h3 id="debug-options" tabindex="-1">Debug Options <a class="header-anchor" href="#debug-options" aria-label="Permalink to &quot;Debug Options&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Debug configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_DEBUG_SYMBOLS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Include debug symbols in release build</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> STACK_PROTECTOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Enable stack protection</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HEAP_VALIDATION</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Enable heap validation (performance impact)</span></span></code></pre></div><h2 id="kernel-parameters" tabindex="-1">Kernel Parameters <a class="header-anchor" href="#kernel-parameters" aria-label="Permalink to &quot;Kernel Parameters&quot;">​</a></h2><p>The kernel accepts several parameters that can be passed via the bootloader:</p><table tabindex="0"><thead><tr><th>Parameter</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>debug</code></td><td>Enable debug output</td><td>Disabled</td></tr><tr><td><code>serial</code></td><td>Enable serial output</td><td>Enabled</td></tr><tr><td><code>vga</code></td><td>Use VGA text mode instead of framebuffer</td><td>Disabled</td></tr><tr><td><code>noacpi</code></td><td>Disable ACPI</td><td>ACPI Enabled</td></tr><tr><td><code>nomce</code></td><td>Disable Machine Check Exception handling</td><td>MCE Enabled</td></tr></tbody></table><h2 id="memory-layout" tabindex="-1">Memory Layout <a class="header-anchor" href="#memory-layout" aria-label="Permalink to &quot;Memory Layout&quot;">​</a></h2><p>The kernel memory layout is defined in <code>misc/linkage.ld</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>KERNEL_VIRT_BASE = 0xFFFFFFFF80000000;  /* Kernel virtual base address */</span></span>
<span class="line"><span>KERNEL_PHYS_BASE = 0x100000;            /* Kernel physical base (1MB) */</span></span></code></pre></div><p>This places the kernel in the higher half of the virtual address space, starting at -2GB.</p><h2 id="interrupt-configuration" tabindex="-1">Interrupt Configuration <a class="header-anchor" href="#interrupt-configuration" aria-label="Permalink to &quot;Interrupt Configuration&quot;">​</a></h2><p>Interrupt handling can be configured in <code>src/kernel/arch/interrupts.cxx</code>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// IRQ assignments</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PIT_IRQ</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Programmable Interval Timer</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> KEYBOARD_IRQ</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Keyboard controller</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CASCADE_IRQ</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Cascade for IRQs 8-15</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> COM1_IRQ</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // Serial port COM1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MOUSE_IRQ</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // PS/2 Mouse</span></span></code></pre></div><h2 id="scheduler-settings" tabindex="-1">Scheduler Settings <a class="header-anchor" href="#scheduler-settings" aria-label="Permalink to &quot;Scheduler Settings&quot;">​</a></h2><p>The kernel scheduler can be configured in <code>src/kernel/sched/scheduler.cxx</code>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Scheduler configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TIMESLICE_MS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Default timeslice in milliseconds</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MAX_PRIORITY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Number of priority levels</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DEFAULT_PRIORITY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Default process priority</span></span></code></pre></div><h2 id="customizing-the-kernel" tabindex="-1">Customizing the Kernel <a class="header-anchor" href="#customizing-the-kernel" aria-label="Permalink to &quot;Customizing the Kernel&quot;">​</a></h2><p>To customize the kernel configuration:</p><ol><li>Edit the appropriate configuration file</li><li>Rebuild the kernel with <code>make clean &amp;&amp; make</code></li><li>Test your changes in QEMU before deploying</li></ol><h2 id="configuration-examples" tabindex="-1">Configuration Examples <a class="header-anchor" href="#configuration-examples" aria-label="Permalink to &quot;Configuration Examples&quot;">​</a></h2><h3 id="minimal-configuration" tabindex="-1">Minimal Configuration <a class="header-anchor" href="#minimal-configuration" aria-label="Permalink to &quot;Minimal Configuration&quot;">​</a></h3><p>For a minimal system with reduced memory footprint:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_SMP</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_ACPI</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> KERNEL_HEAP_INITIAL_SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (1 * 1024 * 1024)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 1MB initial heap</span></span></code></pre></div><h3 id="debug-configuration" tabindex="-1">Debug Configuration <a class="header-anchor" href="#debug-configuration" aria-label="Permalink to &quot;Debug Configuration&quot;">​</a></h3><p>For a debug-friendly configuration:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_DEBUG_SYMBOLS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ENABLE_SERIAL_LOGGING</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> STACK_PROTECTOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HEAP_VALIDATION</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li>Only enable features you need to minimize kernel size and attack surface</li><li>Test thoroughly after changing configuration options</li><li>Consider hardware compatibility when disabling features like ACPI</li><li>Document any custom configurations you create</li></ol>`,35)]))}const g=s(t,[["render",l]]);export{c as __pageData,g as default};
