name: Deploy Documentation

on:
  # Deploy on pushes to main branch
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Important for changelog generation

      # Debug: Print directory structure to understand the repo layout
      - name: Debug directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Checking for package.json files:"
          find . -name "package.json" -type f | sort

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Set node version to 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Pages
        uses: actions/configure-pages@v3

      # Install dependencies in the root directory
      - name: Install dependencies
        run: bun install

      # Build documentation using the correct path
      - name: Build documentation
        run: |
          # Try different possible build commands based on common VitePress setups
          if [ -f "package.json" ]; then
            echo "Found package.json in root directory"
            if grep -q "\"docs:build\"" package.json; then
              echo "Running docs:build script"
              bun run docs:build
            elif grep -q "\"build\"" package.json; then
              echo "Running build script"
              bun run build
            else
              echo "No build script found, trying VitePress directly"
              bunx vitepress build site/docs
            fi
          else
            echo "No package.json found in root directory"
            exit 1
          fi
        
      # Only run changelog and release steps when triggered by a tag
      - name: Update CHANGELOG
        if: startsWith(github.ref, 'refs/tags/')
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}

      - name: Commit CHANGELOG.md
        if: startsWith(github.ref, 'refs/tags/')
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md

      # Debug: Check the build output location
      - name: Check build output
        run: |
          echo "Checking possible build output locations:"
          ls -la site/docs/.vitepress/dist || echo "site/docs/.vitepress/dist not found"
          ls -la docs/.vitepress/dist || echo "docs/.vitepress/dist not found"
          ls -la .vitepress/dist || echo ".vitepress/dist not found"

      # Create .nojekyll file to prevent Jekyll processing
      - name: Create .nojekyll file
        run: |
          # Try different possible build output locations
          if [ -d "site/docs/.vitepress/dist" ]; then
            touch site/docs/.vitepress/dist/.nojekyll
            echo "Build output is in site/docs/.vitepress/dist"
            BUILD_DIR="site/docs/.vitepress/dist"
          elif [ -d "docs/.vitepress/dist" ]; then
            touch docs/.vitepress/dist/.nojekyll
            echo "Build output is in docs/.vitepress/dist"
            BUILD_DIR="docs/.vitepress/dist"
          elif [ -d ".vitepress/dist" ]; then
            touch .vitepress/dist/.nojekyll
            echo "Build output is in .vitepress/dist"
            BUILD_DIR=".vitepress/dist"
          else
            echo "Could not find build output directory"
            exit 1
          fi
          
          # Export the build directory for later steps
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV

      # Deploy directly to main branch in a docs folder
      - name: Deploy to main branch docs folder
        run: |
          # Create a docs directory at the root of the repository
          mkdir -p docs
          
          # Copy the built files to the docs directory
          cp -r $BUILD_DIR/* docs/
          
          # Add .nojekyll file
          touch docs/.nojekyll
          
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Add and commit the changes
          git add docs/
          git commit -m "Update documentation" || echo "No changes to commit"
          
          # Push to main branch
          git push origin main
